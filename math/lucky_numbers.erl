% Lucky Numbers
%
% In number theory, a lucky number is a natural number in a set which
% is generated by a certain "sieve". This sieve is similar to the Sieve
% of Eratosthenes that generates the primes, but it eliminates numbers
% based on their position in the remaining set, instead of their value
% (or position in the initial set of natural numbers).
%
-module(lucky_numbers).

-export([go/1]).

-include_lib("eunit/include/eunit.hrl").

go(Size) -> go(2, lists:seq(1,Size)).

go(N, List) when length(List) < N -> List;
go(N, List) -> go(N+1, remove_every_nth(N,List)).

remove_every_nth(N,List) -> remove_every_nth(1,N,List,[]).

remove_every_nth(_, _, [], List) -> lists:reverse(List);
remove_every_nth(N, N, [_|T], List) -> remove_every_nth(1, N, T, List);
remove_every_nth(K, N, [H|T], List) -> remove_every_nth(K+1, N, T, [H|List]).

remove_every_nth_test_() ->
    List = lists:seq(1,20),
    [
     ?_assertEqual([1,3,5,7,9,11,13,15,17,19], remove_every_nth(2,List)),
     ?_assertEqual([1,2,4,5,7,8,10,11,13,14,16,17,19,20], remove_every_nth(3,List)),
     ?_assertEqual([1,2,3,5,6,7,9,10,11,13,14,15,17,18,19], remove_every_nth(4,List))
    ].

go_test_() ->
    [
     ?_assertEqual([1], go(1)),
     ?_assertEqual([1,3,7,13,19], go(20)),
     ?_assertEqual([1,3,7,13,19,27,39,49,63,79,91], go(100))
    ].
